[pytest]
asyncio_mode = auto
filterwarnings =
    ignore::DeprecationWarning:pytest_asyncio.*

# Оптимизация для CI/CD (ограниченные ресурсы GitHub)
addopts = -n 2 --dist loadscope --maxfail=3 --tb=short --strict-markers
# -n 2 = фиксированное количество воркеров для стабильности
# --dist loadscope = распределение по модулям (стабильнее в CI)
# --maxfail=3 = быстрое завершение при ошибках
# --tb=short = короткие трейсбеки для экономии лога
# --strict-markers = строгая проверка маркеров

# Исключаем шаблоны тестов из запуска
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Игнорируем шаблонные файлы и валидационные скрипты  
testpaths = tests
norecursedirs = __pycache__ .git validate_audio_guide tests/test_template.py

# Маркеры для группировки тестов
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    smoke: marks tests as smoke tests
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    e2e: marks tests as end-to-end tests
    performance: marks tests as performance tests
    accessibility: marks tests as accessibility tests
    chromium: marks tests for Chromium browser
    firefox: marks tests for Firefox browser  
    webkit: marks tests for WebKit browser

# Оптимизация для CI/CD
console_output_style = classic
junit_duration_report = call
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s 